generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  SALES
  CUSTOMER
  USER
}

enum DealStage {
  QUALIFIED
  PROPOSAL
  NEGOTIATION
  CLOSED_WON
  CLOSED_LOST
}

model Organization {
  id        String     @id @default(uuid())
  name      String
  users     User[]
  contacts  Contact[]
  deals     Deal[]
  createdAt DateTime   @default(now())
}

model User {
  id             String     @id @default(uuid())
  email          String?    @unique
  phone          String?    @unique
  passwordHash   String
  isVerified     Boolean    @default(false)
  role           Role
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  otps           OTP[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now())
}

model OTP {
  id        String   @id @default(uuid())
  code      String
  type      String   // email or phone
  target    String   // email address or phone number
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Contact {
  id             String     @id @default(uuid())
  name           String
  email          String
  phone          String
  company        String?
  notes          String?
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  deals          Deal[]
  createdAt      DateTime   @default(now())
}

model Deal {
  id             String     @id @default(uuid())
  name           String
  value          Float
  stage          DealStage
  contactId      String?
  contact        Contact?   @relation(fields: [contactId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}
